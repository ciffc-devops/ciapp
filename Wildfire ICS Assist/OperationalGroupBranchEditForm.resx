<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="editBranchControl3.SelectedGroup" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEpXRi1JQ1MtQ2xhc3NMaWJyYXJ5LCBWZXJzaW9uPTEuMC4wLjEs
        IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbAwDAAAAmgFtc2NvcmxpYiwgVmVyc2lv
        bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODld
        XSwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
        bj1iNzdhNWM1NjE5MzRlMDg5BQEAAAArV0ZfSUNTX0NsYXNzTGlicmFyeS5Nb2RlbHMuT3BlcmF0aW9u
        YWxHcm91cB0AAAAFX05hbWUJX1BhcmVudElEC19QYXJlbnROYW1lCl9Hcm91cFR5cGUPX051bWJlck9m
        UGVvcGxlEF9MZWFkZXJJQ1NSb2xlSUQSX0xlYWRlcklDU1JvbGVOYW1lCV9MZWFkZXJJRAtfTGVhZGVy
        TmFtZQ9fUHJlcGFyZWRCeU5hbWUTX1ByZXBhcmVkQnlQb3NpdGlvbhVfUHJlcGFyZWRCeVBvc2l0aW9u
        SUQIX0NvbnRhY3QNX1Nob3J0UmVtYXJrcwlfQ29tbWVudHMTX1RhY3RpY2FsQXNzaWdubWVudBRfU3Bl
        Y2lhbEluc3RydWN0aW9ucxFfQ29tbXNQbGFuSXRlbUlEcwtfUmVzb3VyY2VJRAZfRGVwdGgOX1NwYW5P
        ZkNvbnRyb2wUSW5jaWRlbnRSZXNvdXJjZStfSUQYSW5jaWRlbnRSZXNvdXJjZStfQWN0aXZlGkluY2lk
        ZW50UmVzb3VyY2UrX09wUGVyaW9kH0luY2lkZW50UmVzb3VyY2UrX0xhc3RVcGF0ZWRVVEMeSW5jaWRl
        bnRSZXNvdXJjZStfUmVzb3VyY2VOYW1lFkluY2lkZW50UmVzb3VyY2UrX0tpbmQWSW5jaWRlbnRSZXNv
        dXJjZStfVHlwZSRJbmNpZGVudFJlc291cmNlK19SZXNvdXJjZUlkZW50aWZpZXIBAwEBAAMBAwEBAQMB
        AQEBAQQBAAADAAAAAQEBAQtTeXN0ZW0uR3VpZAgLU3lzdGVtLkd1aWQLU3lzdGVtLkd1aWQLU3lzdGVt
        Lkd1aWQuU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuTGlzdGAxW1tTeXN0ZW0uR3VpZAMAAAAICAtT
        eXN0ZW0uR3VpZAEIDQIAAAAKBPz///8LU3lzdGVtLkd1aWQLAAAAAl9hAl9iAl9jAl9kAl9lAl9mAl9n
        Al9oAl9pAl9qAl9rAAAAAAAAAAAAAAAIBwcCAgICAgICAgAAAAAAAAAAAAAAAAAAAAAKCgAAAAAB+///
        //z///8AAAAAAAAAAAAAAAAAAAAACgH6/////P///wAAAAAAAAAAAAAAAAAAAAAKCgoB+f////z///8A
        AAAAAAAAAAAAAAAAAAAACgoKCgoJCAAAAAoAAAAAAAAAAAH3/////P///wAAAAAAAAAAAAAAAAAAAAAB
        AAAAAPHjjRomHdtICgoKCgUIAAAALlN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkxpc3RgMVtbU3lz
        dGVtLkd1aWQDAAAABl9pdGVtcwVfc2l6ZQhfdmVyc2lvbgMAAA1TeXN0ZW0uR3VpZFtdCAgDAAAACQoA
        AAAAAAAAAAAAAAcKAAAAAAEAAAAAAAAAAwtTeXN0ZW0uR3VpZAs=
</value>
  </data>
</root>